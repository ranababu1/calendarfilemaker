const express = require('express');
const bodyParser = require('body-parser');
const ical = require('ical-generator');

const app = express();
app.use(express.static('public'));


// Use body-parser middleware to parse incoming request bodies
app.use(bodyParser.urlencoded({ extended: true }));

// Define a route to handle user input and generate iCal file
app.post('/generate', (req, res) => {
  // Get the user input from the request body
  const { eventName, eventDate } = req.body;

  // Create a new iCal object and add the event to it
  const cal = ical({ domain: 'example.com', prodId: '//My//Product//EN' });
  cal.createEvent({
    start: new Date(eventDate),
    end: new Date(eventDate),
    summary: eventName,
    description: 'Event generated by Node.js',
  });

  // Set the response headers to indicate that a file is being downloaded
  res.set({
    'Content-Disposition': 'attachment; filename="event.ics"',
    'Content-Type': 'text/calendar',
  });

  // Send the iCal file as the response
  res.send(cal.toString());
});

// Start the server
const port = 3000;
app.listen(port, () => {
  console.log(`Server listening on port ${port}`);
});
